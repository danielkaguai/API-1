# 12345_q2

class Student:
    def __init__(self, name, student_id):
        self.name = name
        self.student_id = student_id
        self.assignments = {}  # Dictionary to store assignments and grades

    def add_assignment(self, assignment_name, grade):
        """Add an assignment and its grade to the student's record."""
        self.assignments[assignment_name] = grade
        print(f"Assignment '{assignment_name}' with grade {grade} added for {self.name}.")

    def display_grades(self):
        """Display all assignments and grades for the student."""
        if self.assignments:
            print(f"\nGrades for {self.name}:")
            for assignment, grade in self.assignments.items():
                print(f" - {assignment}: {grade}")
        else:
            print(f"{self.name} has no assignments recorded.")

class Instructor:
    def __init__(self, name, course_name):
        self.name = name
        self.course_name = course_name
        self.students = []  # List to store students enrolled in the course

    def add_student(self, student):
        """Add a student to the course."""
        self.students.append(student)
        print(f"{student.name} has been added to the course '{self.course_name}'.")

    def assign_grade(self, student_id, assignment_name, grade):
        """Assign a grade to a student for a specific assignment."""
        student = next((s for s in self.students if s.student_id == student_id), None)
        if student:
            student.add_assignment(assignment_name, grade)
        else:
            print("Student not found.") 

    def display_all_students(self):
        """Display all students and their grades in the course."""
        print(f"\nCourse: {self.course_name}")
        for student in self.students:
            print(f"\nStudent: {student.name} (ID: {student.student_id})")
            student.display_grades()

# Interactive code for Course Management System
instructor = Instructor("Dr. Walter", "Information Technology")

# Adding example students (interactive feature)
while True:
    print("\nOptions:")
    print("1. Add Student")
    print("2. Assign Grade")
    print("3. Display All Students and Grades")
    print("4. Exit")
    choice = input("Choose an action : ")

    if choice == '1':
        name = input("Enter the student's name: ")
        student_id = input("Enter the student ID: ")
        student = Student(name, student_id)
        instructor.add_student(student)

    elif choice == '2':
        student_id = input("Enter the student ID for grading: ")
        assignment = input("Enter the assignment name: ")
        grade = input("Enter the grade: ")
        instructor.assign_grade(student_id, assignment, grade)

    elif choice == '3':
        instructor.display_all_students()

    elif choice == '4':
        print("Exiting the course management system.")
        break

    else:
        print("Invalid option. Please choose between 1 and 4.")
