# 12345_q3

class Employee:
    def __init__(self, name, employee_id, salary):
        self.name = name
        self.employee_id = employee_id
        self.salary = salary

    def display_details(self):
        """Display details of the employee."""
        print(f"Employee ID: {self.employee_id}, Name: {self.name}, Salary: ${self.salary}")

    def update_salary(self, new_salary):
        """Update the employee's salary."""
        self.salary = new_salary
        print(f"{self.name}'s salary updated to ${self.salary}")


class Department:
    def __init__(self, department_name):
        self.department_name = department_name
        self.employees = []  # List to store employees in the department

    def add_employee(self, employee):
        """Add an employee to the department."""
        self.employees.append(employee)
        print(f"{employee.name} has been added to the {self.department_name} department.")

    def calculate_total_salary(self):
        """Calculate and display the total salary expenditure for the department."""
        total_salary = sum(emp.salary for emp in self.employees)
        print(f"Total salary expenditure for {self.department_name}: ${total_salary}")

    def display_all_employees(self):
        """Display all employees in the department."""
        print(f"\nEmployees in {self.department_name} Department:")
        for emp in self.employees:
            emp.display_details()


# Interactive Code for Department Management
department = Department("Human Resource")

while True:
    print("\nOptions:")
    print("1. Add Employee")
    print("2. Update Employee Salary")
    print("3. Display All Employees")
    print("4. Display Total Salary Expenditure")
    print("5. Exit")
    choice = input("Choose an action (1-5): ")

    if choice == '1':
        # Add a new employee
        name = input("Enter employee's name: ")
        employee_id = input("Enter employee ID: ")
        salary = float(input("Enter employee's salary: "))
        employee = Employee(name, employee_id, salary)
        department.add_employee(employee)

    elif choice == '2':
        # Update an employee's salary
        employee_id = input("Enter employee ID to update salary: ")
        new_salary = float(input("Enter new salary: "))
        for emp in department.employees:
            if emp.employee_id == employee_id:
                emp.update_salary(new_salary)
                break
        else:
            print("Employee not found.")

    elif choice == '3':
        # Display all employees
        department.display_all_employees()

    elif choice == '4':
        # Display total salary expenditure
        department.calculate_total_salary()

    elif choice == '5':
        print("Exiting the department management system.")
        break

    else:
        print("Invalid option. Please choose between 1 and 5.")

